// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eMekteb.Services.Database;

#nullable disable

namespace eMekteb.Services.Migrations
{
    [DbContext(typeof(eMektebContext))]
    [Migration("20241009142454_addAttr")]
    partial class addAttr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eMekteb.Services.Database.AkademskaGodina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZavrsetka")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isAktivna")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AkademskaGodina");
                });

            modelBuilder.Entity("eMekteb.Services.Database.AkademskaMekteb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AkademskaGodinaId")
                        .HasColumnType("int");

                    b.Property<int>("MektebId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AkademskaGodinaId");

                    b.HasIndex("MektebId");

                    b.ToTable("AkademskaMekteb");
                });

            modelBuilder.Entity("eMekteb.Services.Database.AkademskaRazred", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AkademskaGodinaId")
                        .HasColumnType("int");

                    b.Property<int>("RazredId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AkademskaGodinaId");

                    b.HasIndex("RazredId");

                    b.ToTable("AkademskaRazred");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Cas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AkademskaGodinaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lekcija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MektebId")
                        .HasColumnType("int");

                    b.Property<string>("Razred")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AkademskaGodinaId");

                    b.HasIndex("MektebId");

                    b.ToTable("Cas");
                });

            modelBuilder.Entity("eMekteb.Services.Database.DodatneLekcije", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumObjavljivanja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Dislikes")
                        .HasColumnType("int");

                    b.Property<int?>("Likes")
                        .HasColumnType("int");

                    b.Property<int>("MektebId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MektebId");

                    b.ToTable("DodatneLekcije");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Kamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumPocetka")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumZavrsetka")
                        .HasColumnType("datetime2");

                    b.Property<int>("MektebId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voditelj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MektebId");

                    b.ToTable("Kamp");
                });

            modelBuilder.Entity("eMekteb.Services.Database.KampKorisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumDodavanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("KampId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KampId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("KampKorisnik");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Kategorija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TakmicenjeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TakmicenjeId");

                    b.ToTable("Kategorija");
                });

            modelBuilder.Entity("eMekteb.Services.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdRazreda")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImeRoditelja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MektebId")
                        .HasColumnType("int");

                    b.Property<string>("NazivRazreda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Prisustvo")
                        .HasColumnType("float");

                    b.Property<double?>("Prosjek")
                        .HasColumnType("float");

                    b.Property<int?>("RazredId")
                        .HasColumnType("int");

                    b.Property<int?>("RoditeljId")
                        .HasColumnType("int");

                    b.Property<string>("Spol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MektebId");

                    b.HasIndex("RazredId");

                    b.HasIndex("RoditeljId");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Medzlis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medzlis");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Mekteb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MedzlisId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MedzlisId");

                    b.ToTable("Mekteb");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Obavijest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumObjave")
                        .HasColumnType("datetime2");

                    b.Property<int>("MektebId")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VrstaObjave")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MektebId");

                    b.ToTable("Obavijest");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Ocjene", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Ocjena")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ocjene");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Prisustvo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CasId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<bool?>("Prisutan")
                        .HasColumnType("bit");

                    b.Property<int?>("RazredId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CasId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RazredId");

                    b.ToTable("Prisustvo");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Razred", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MektebId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MektebId");

                    b.ToTable("Razred");
                });

            modelBuilder.Entity("eMekteb.Services.Database.RazredKorisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumUpisa")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("RazredId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RazredId");

                    b.ToTable("RazredKorisnik");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Slika", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<byte[]>("SlikaBytes")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Slika");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Takmicar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UkupnoBodova")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategorijaId");

                    b.ToTable("Takmicar");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Takmicenje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumOdrzavanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Godina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MedzlisId")
                        .HasColumnType("int");

                    b.Property<string>("VrijemePočetka")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MedzlisId");

                    b.ToTable("Takmicenje");
                });

            modelBuilder.Entity("eMekteb.Services.Database.TakmicenjeKategorija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<int>("TakmicenjeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("TakmicenjeId");

                    b.ToTable("TakmicenjeKategorija");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Uloga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Zadaca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumDodjele")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Lekcija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OcjeneId")
                        .HasColumnType("int");

                    b.Property<int>("RazredId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("OcjeneId");

                    b.HasIndex("RazredId");

                    b.ToTable("Zadaca");
                });

            modelBuilder.Entity("eMekteb.Services.Database.AkademskaMekteb", b =>
                {
                    b.HasOne("eMekteb.Services.Database.AkademskaGodina", "AkademskaGodina")
                        .WithMany("AkademskaMekteb")
                        .HasForeignKey("AkademskaGodinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eMekteb.Services.Database.Mekteb", "Mekteb")
                        .WithMany("AkademskaMekteb")
                        .HasForeignKey("MektebId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AkademskaGodina");

                    b.Navigation("Mekteb");
                });

            modelBuilder.Entity("eMekteb.Services.Database.AkademskaRazred", b =>
                {
                    b.HasOne("eMekteb.Services.Database.AkademskaGodina", "AkademskaGodina")
                        .WithMany()
                        .HasForeignKey("AkademskaGodinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eMekteb.Services.Database.Razred", "Razred")
                        .WithMany()
                        .HasForeignKey("RazredId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AkademskaGodina");

                    b.Navigation("Razred");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Cas", b =>
                {
                    b.HasOne("eMekteb.Services.Database.AkademskaGodina", "AkademskaGodina")
                        .WithMany()
                        .HasForeignKey("AkademskaGodinaId");

                    b.HasOne("eMekteb.Services.Database.Mekteb", "Mekteb")
                        .WithMany()
                        .HasForeignKey("MektebId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AkademskaGodina");

                    b.Navigation("Mekteb");
                });

            modelBuilder.Entity("eMekteb.Services.Database.DodatneLekcije", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Mekteb", "Mekteb")
                        .WithMany("DodatneLekcije")
                        .HasForeignKey("MektebId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mekteb");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Kamp", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Mekteb", null)
                        .WithMany("Kampovi")
                        .HasForeignKey("MektebId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eMekteb.Services.Database.KampKorisnik", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Kamp", "Kamp")
                        .WithMany()
                        .HasForeignKey("KampId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eMekteb.Services.Database.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kamp");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Kategorija", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Takmicenje", "Takmicenje")
                        .WithMany()
                        .HasForeignKey("TakmicenjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Takmicenje");
                });

            modelBuilder.Entity("eMekteb.Services.Database.KorisniciUloge", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Korisnik", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eMekteb.Services.Database.Uloga", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Korisnik", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Mekteb", "Mekteb")
                        .WithMany("Korisnik")
                        .HasForeignKey("MektebId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eMekteb.Services.Database.Razred", null)
                        .WithMany("Ucenici")
                        .HasForeignKey("RazredId");

                    b.HasOne("eMekteb.Services.Database.Korisnik", "Roditelj")
                        .WithMany("Djeca")
                        .HasForeignKey("RoditeljId");

                    b.Navigation("Mekteb");

                    b.Navigation("Roditelj");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Mekteb", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Medzlis", "Medzlis")
                        .WithMany("Mektebi")
                        .HasForeignKey("MedzlisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medzlis");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Obavijest", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Mekteb", "Mekteb")
                        .WithMany("Obavijesti")
                        .HasForeignKey("MektebId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mekteb");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Prisustvo", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Cas", "Cas")
                        .WithMany("Prisustva")
                        .HasForeignKey("CasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eMekteb.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Prisustva")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eMekteb.Services.Database.Razred", "Razred")
                        .WithMany()
                        .HasForeignKey("RazredId");

                    b.Navigation("Cas");

                    b.Navigation("Korisnik");

                    b.Navigation("Razred");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Razred", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Mekteb", "Mekteb")
                        .WithMany()
                        .HasForeignKey("MektebId");

                    b.Navigation("Mekteb");
                });

            modelBuilder.Entity("eMekteb.Services.Database.RazredKorisnik", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eMekteb.Services.Database.Razred", "Razred")
                        .WithMany()
                        .HasForeignKey("RazredId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Razred");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Slika", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Takmicar", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Kategorija", "Kategorija")
                        .WithMany("Takmicari")
                        .HasForeignKey("KategorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorija");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Takmicenje", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Medzlis", "Medzlis")
                        .WithMany("Takmicenje")
                        .HasForeignKey("MedzlisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medzlis");
                });

            modelBuilder.Entity("eMekteb.Services.Database.TakmicenjeKategorija", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Kategorija", "Kategorija")
                        .WithMany()
                        .HasForeignKey("KategorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eMekteb.Services.Database.Takmicenje", "Takmicenje")
                        .WithMany("TakmicenjeKategorije")
                        .HasForeignKey("TakmicenjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorija");

                    b.Navigation("Takmicenje");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Zadaca", b =>
                {
                    b.HasOne("eMekteb.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Zadace")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eMekteb.Services.Database.Ocjene", "Ocjene")
                        .WithMany()
                        .HasForeignKey("OcjeneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eMekteb.Services.Database.Razred", "Razred")
                        .WithMany()
                        .HasForeignKey("RazredId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Ocjene");

                    b.Navigation("Razred");
                });

            modelBuilder.Entity("eMekteb.Services.Database.AkademskaGodina", b =>
                {
                    b.Navigation("AkademskaMekteb");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Cas", b =>
                {
                    b.Navigation("Prisustva");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Kategorija", b =>
                {
                    b.Navigation("Takmicari");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Korisnik", b =>
                {
                    b.Navigation("Djeca");

                    b.Navigation("KorisniciUloge");

                    b.Navigation("Prisustva");

                    b.Navigation("Zadace");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Medzlis", b =>
                {
                    b.Navigation("Mektebi");

                    b.Navigation("Takmicenje");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Mekteb", b =>
                {
                    b.Navigation("AkademskaMekteb");

                    b.Navigation("DodatneLekcije");

                    b.Navigation("Kampovi");

                    b.Navigation("Korisnik");

                    b.Navigation("Obavijesti");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Razred", b =>
                {
                    b.Navigation("Ucenici");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Takmicenje", b =>
                {
                    b.Navigation("TakmicenjeKategorije");
                });

            modelBuilder.Entity("eMekteb.Services.Database.Uloga", b =>
                {
                    b.Navigation("KorisniciUloge");
                });
#pragma warning restore 612, 618
        }
    }
}
